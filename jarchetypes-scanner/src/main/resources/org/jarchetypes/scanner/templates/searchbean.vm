package ${targetPackage};

import java.util.List;
import java.util.ArrayList;

import javax.faces.bean.SessionScoped;
import javax.inject.Inject;
import javax.inject.Named;
import java.util.HashMap;
import org.jarchetypes.service.search.GenericSearchBean;
import $beanPathName;


@Named
@SessionScoped
public class ${beanName}SearchBean  extends GenericSearchBean<${beanName}> {
	
	
	
	#foreach( $widget in $filters )
	$widget.getFieldType() $widget.getFieldName();			
	#end
	
	
	public ${beanName}SearchBean() {
		super();
	}
	
	
	public List<${beanName}>  search(){
		List<${beanName}> list = new ArrayList<${beanName}>();
		
		HashMap<String,Object> parameters = new HashMap<String,Object>(); 
		
		#foreach( $widget in $filters )
			parameters.put("$widget.getFieldName()",$widget.getFieldName());			
		#end
		
		
		try {
			list = search(${beanName}.class,parameters);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return list;
			
	}
	
	
	#foreach( $widget in $filters )
	public String get$ArchetypesUtils.captalize($widget.getFieldName())() {
		return $widget.getFieldName();
	}

	public void set$ArchetypesUtils.captalize($widget.getFieldName())($widget.getFieldType() $widget.getFieldName()) {
		this.$widget.getFieldName() = $widget.getFieldName();
	}
	#end
		
}
